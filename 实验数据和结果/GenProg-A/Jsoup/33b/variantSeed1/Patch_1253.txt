1 Delete /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java 99
Faulty:
currentToken=token;
Seed:
clearStackToContext("tr");
**************************************************
2 InsertBefore /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java 187
Faulty:
if (tag.isKnownTag()) {
  if (tag.isSelfClosing())   tokeniser.acknowledgeSelfClosingFlag();
}
 else {
  tag.setSelfClosing();
  tokeniser.acknowledgeSelfClosingFlag();
}
Seed:
tokeniser=new Tokeniser(reader,errors);
**************************************************
3 InsertBefore /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java 187
Faulty:
if (tag.isKnownTag()) {
  if (tag.isSelfClosing())   tokeniser.acknowledgeSelfClosingFlag();
}
 else {
  tag.setSelfClosing();
  tokeniser.acknowledgeSelfClosingFlag();
}
Seed:
tokeniser=new Tokeniser(reader,errors);
**************************************************
4 Delete /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java 99
Faulty:
currentToken=token;
Seed:
clearStackToContext("tr");
**************************************************
5 Delete /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java 188
Faulty:
if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();
Seed:
if (errors.canAddError()) errors.add(new ParseError(reader.pos(),"Unexpected token [%s] when in state [%s]",currentToken.tokenType(),state));
**************************************************
6 InsertBefore /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/TokeniserState.java 1689
Faulty:
t.transition(elseTransition);
Seed:
StringBuilder builder=new StringBuilder();
**************************************************
7 InsertBefore /home/ubuntu/rtx/d4j/Jsoup/33b/src/main/java/org/jsoup/parser/TokeniserState.java 1662
Faulty:
if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
  char c=r.consume();
switch (c) {
case '\t':
case '\n':
case '\r':
case '\f':
case ' ':
    t.transition(BeforeAttributeName);
  break;
case '/':
t.transition(SelfClosingStartTag);
break;
case '>':
t.emitTagPending();
t.transition(Data);
break;
default :
t.dataBuffer.append(c);
needsExitTransition=true;
}
}
 else {
needsExitTransition=true;
}
Seed:
int numSeen=0;
**************************************************
Evaluations: 1514
EstimatedTime: 1676326
