1 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
return new SparseFieldVector<T>(this);
**************************************************
2 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
**************************************************
3 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
b2=work[nn - 9] / work[nn - 11];
**************************************************
4 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1504
Faulty:
if (b2 == 0.0) {
  break;
}
Seed:
final double cnst1=0.563;
**************************************************
5 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
final int nSum=getColumnDimension();
**************************************************
6 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1503
Faulty:
for (int i4=np; i4 >= 4 * start + 2 + pingPong; i4-=4) {
  if (b2 == 0.0) {
    break;
  }
  b1=b2;
  if (work[i4] > work[i4 - 2]) {
    return;
  }
  b2=b2 * (work[i4] / work[i4 - 2]);
  a2=a2 + b2;
  if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
    break;
  }
}
Seed:
for (int i4=4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4-=4) {
  final double oldB1=b1;
  if (work[i4] > work[i4 - 2]) {
    return;
  }
  b1=b1 * (work[i4] / work[i4 - 2]);
  b2=b2 + b1;
  if (100 * Math.max(b1,oldB1) < b2) {
    break;
  }
}
**************************************************
7 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1508
Faulty:
if (work[i4] > work[i4 - 2]) {
  return;
}
Seed:
secondary=transformer.getSecondaryDiagonalRef();
**************************************************
8 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1084
Faulty:
if ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma)) {
  work[4 * deflatedEnd - 3 - pingPong]=0.0;
  dMin=0.0;
  updateSigma(tau);
  return deflatedEnd;
}
 else if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
double tmp=0;
**************************************************
9 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1537
Faulty:
if (work[np - 8] > b2 || work[np - 4] > b1) {
  return;
}
Seed:
transformer=null;
**************************************************
10 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1529
Faulty:
tType=-5;
Seed:
g=0.25;
**************************************************
11 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1504
Faulty:
if (b2 == 0.0) {
  break;
}
Seed:
g=0.0;
**************************************************
12 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1520
Faulty:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
Seed:
tType-=11;
**************************************************
13 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1507
Faulty:
b1=b2;
Seed:
final int nCols=this.getColumnDimension();
**************************************************
14 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1100
Faulty:
tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
Seed:
l+=4;
**************************************************
15 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1480
Faulty:
a2=0.0;
Seed:
b2=Math.sqrt(cnst3 * b2);
**************************************************
16 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1625
Faulty:
tType=-9;
Seed:
double xNormSqr=0;
**************************************************
17 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
double xNormSqr=0;
**************************************************
18 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
tau=0.0;
**************************************************
19 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1093
Faulty:
if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
final int nRows=this.getRowDimension();
**************************************************
20 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
int lastPos=0;
**************************************************
21 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1095
Faulty:
if (tType < -22) {
  tau=0.0;
}
 else if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
Seed:
int blockIndex=0;
**************************************************
22 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1474
Faulty:
tType=-4;
Seed:
double b2=Math.sqrt(work[nn - 7]) * Math.sqrt(work[nn - 9]);
**************************************************
23 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1622
Faulty:
if (dMin1 == dN1) {
  tau=0.5 * dMin1;
}
Seed:
double dot=0;
**************************************************
24 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1101
Faulty:
tType-=11;
Seed:
if ((dMin >= 0) && (dMin1 > 0)) {
  updateSigma(tau);
  return deflatedEnd;
}
 else if ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma)) {
  work[4 * deflatedEnd - 3 - pingPong]=0.0;
  dMin=0.0;
  updateSigma(tau);
  return deflatedEnd;
}
 else if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
**************************************************
25 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1507
Faulty:
b1=b2;
Seed:
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
**************************************************
26 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1101
Faulty:
tType-=11;
Seed:
double d=work[4 * start + pingPong];
**************************************************
27 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1540
Faulty:
double a2=(work[np - 8] / b2) * (1 + work[np - 4] / b1);
Seed:
double d=work[4 * start + pingPong] - tau;
**************************************************
28 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1625
Faulty:
tType=-9;
Seed:
dMin=Math.min(dMin,dN);
**************************************************
29 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1095
Faulty:
if (tType < -22) {
  tau=0.0;
}
 else if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
Seed:
return copy().mapCbrtToSelf();
**************************************************
30 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1093
Faulty:
if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
if ((dMin >= 0) && (dMin1 > 0)) {
  updateSigma(tau);
  return deflatedEnd;
}
 else if ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma)) {
  work[4 * deflatedEnd - 3 - pingPong]=0.0;
  dMin=0.0;
  updateSigma(tau);
  return deflatedEnd;
}
 else if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
**************************************************
31 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1627
Faulty:
break;
Seed:
final double gam=dN2;
**************************************************
32 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
int sixI=0;
**************************************************
33 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
return cachedD;
**************************************************
34 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
**************************************************
35 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
b2=work[nn - 9] / work[nn - 11];
**************************************************
36 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1504
Faulty:
if (b2 == 0.0) {
  break;
}
Seed:
final double cnst1=0.563;
**************************************************
37 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
final int nSum=getColumnDimension();
**************************************************
38 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1503
Faulty:
for (int i4=np; i4 >= 4 * start + 2 + pingPong; i4-=4) {
  if (b2 == 0.0) {
    break;
  }
  b1=b2;
  if (work[i4] > work[i4 - 2]) {
    return;
  }
  b2=b2 * (work[i4] / work[i4 - 2]);
  a2=a2 + b2;
  if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
    break;
  }
}
Seed:
for (int i4=4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4-=4) {
  final double oldB1=b1;
  if (work[i4] > work[i4 - 2]) {
    return;
  }
  b1=b1 * (work[i4] / work[i4 - 2]);
  b2=b2 + b1;
  if (100 * Math.max(b1,oldB1) < b2) {
    break;
  }
}
**************************************************
39 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1508
Faulty:
if (work[i4] > work[i4 - 2]) {
  return;
}
Seed:
secondary=transformer.getSecondaryDiagonalRef();
**************************************************
40 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1084
Faulty:
if ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma)) {
  work[4 * deflatedEnd - 3 - pingPong]=0.0;
  dMin=0.0;
  updateSigma(tau);
  return deflatedEnd;
}
 else if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
double tmp=0;
**************************************************
41 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1537
Faulty:
if (work[np - 8] > b2 || work[np - 4] > b1) {
  return;
}
Seed:
transformer=null;
**************************************************
42 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1529
Faulty:
tType=-5;
Seed:
g=0.25;
**************************************************
43 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1504
Faulty:
if (b2 == 0.0) {
  break;
}
Seed:
g=0.0;
**************************************************
44 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1520
Faulty:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
Seed:
tType-=11;
**************************************************
45 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1507
Faulty:
b1=b2;
Seed:
final int nCols=this.getColumnDimension();
**************************************************
46 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1100
Faulty:
tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
Seed:
l+=4;
**************************************************
47 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1480
Faulty:
a2=0.0;
Seed:
b2=Math.sqrt(cnst3 * b2);
**************************************************
48 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1625
Faulty:
tType=-9;
Seed:
double xNormSqr=0;
**************************************************
49 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
double xNormSqr=0;
**************************************************
50 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
tau=0.0;
**************************************************
51 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1093
Faulty:
if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
final int nRows=this.getRowDimension();
**************************************************
52 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
int lastPos=0;
**************************************************
53 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1098
Faulty:
if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
Seed:
double alpha=0;
**************************************************
54 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1479
Faulty:
gam=dN;
Seed:
double beta=0;
**************************************************
55 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1529
Faulty:
tType=-5;
Seed:
if (cachedD == null) {
  cachedD=MatrixUtils.createRealDiagonalMatrix(realEigenvalues);
}
**************************************************
56 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1535
Faulty:
double b2=work[np - 6];
Seed:
double max=0;
**************************************************
57 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1543
Faulty:
if (end - start > 2) {
  b2=work[nn - 13] / work[nn - 15];
  a2=a2 + b2;
  for (int i4=nn - 17; i4 >= 4 * start + 2 + pingPong; i4-=4) {
    if (b2 == 0.0) {
      break;
    }
    b1=b2;
    if (work[i4] > work[i4 - 2]) {
      return;
    }
    b2=b2 * (work[i4] / work[i4 - 2]);
    a2=a2 + b2;
    if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
      break;
    }
  }
  a2=cnst3 * a2;
}
Seed:
return true;
**************************************************
58 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1625
Faulty:
tType=-9;
Seed:
dMin=Math.min(dMin,dN);
**************************************************
59 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1095
Faulty:
if (tType < -22) {
  tau=0.0;
}
 else if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
Seed:
return copy().mapCbrtToSelf();
**************************************************
60 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1479
Faulty:
gam=dN;
Seed:
sigmaLow=0;
**************************************************
61 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1512
Faulty:
a2=a2 + b2;
Seed:
final double absoluteTolerance=4 * minPivot;
**************************************************
62 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1474
Faulty:
tType=-4;
Seed:
final double gap2=0.5 * dMin2 - a2;
**************************************************
63 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1627
Faulty:
break;
Seed:
tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
**************************************************
64 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1474
Faulty:
tType=-4;
Seed:
tau=0.25 * dMin1;
**************************************************
Evaluations: 1906
EstimatedTime: 620519
