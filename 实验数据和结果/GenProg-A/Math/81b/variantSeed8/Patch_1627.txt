1 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
squaredSecondary=new double[secondary.length];
**************************************************
2 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1100
Faulty:
tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
Seed:
int index=0;
**************************************************
3 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1513
Faulty:
if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
  break;
}
Seed:
return;
**************************************************
4 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
5 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
squaredSecondary=new double[secondary.length];
**************************************************
6 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1511
Faulty:
b2=b2 * (work[i4] / work[i4 - 2]);
Seed:
tType=-6;
**************************************************
7 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
squaredSecondary=new double[secondary.length];
**************************************************
8 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1511
Faulty:
b2=b2 * (work[i4] / work[i4 - 2]);
Seed:
tType=-6;
**************************************************
9 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
np=nn - 13;
**************************************************
10 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
tau=g * dMin;
**************************************************
11 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
12 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
squaredSecondary=new double[secondary.length];
**************************************************
13 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1511
Faulty:
b2=b2 * (work[i4] / work[i4 - 2]);
Seed:
tType=-6;
**************************************************
14 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
np=nn - 13;
**************************************************
15 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
16 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1586
Faulty:
if (dMin1 == dN1 && dMin2 == dN2) {
  tType=-7;
  double s=0.333 * dMin1;
  if (work[nn - 5] > work[nn - 7]) {
    return;
  }
  double b1=work[nn - 5] / work[nn - 7];
  double b2=b1;
  if (b2 != 0.0) {
    for (int i4=4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4-=4) {
      final double oldB1=b1;
      if (work[i4] > work[i4 - 2]) {
        return;
      }
      b1=b1 * (work[i4] / work[i4 - 2]);
      b2=b2 + b1;
      if (100 * Math.max(b1,oldB1) < b2) {
        break;
      }
    }
  }
  b2=Math.sqrt(cnst3 * b2);
  final double a2=dMin1 / (1 + b2 * b2);
  final double gap2=0.5 * dMin2 - a2;
  if (gap2 > 0.0 && gap2 > b2 * a2) {
    tau=Math.max(s,a2 * (1 - cnst2 * a2 * (b2 / gap2)* b2));
  }
 else {
    tau=Math.max(s,a2 * (1 - cnst2 * b2));
    tType=-8;
  }
}
 else {
  tau=0.25 * dMin1;
  if (dMin1 == dN1) {
    tau=0.5 * dMin1;
  }
  tType=-9;
}
Seed:
final double norm=getNorm();
**************************************************
17 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
np=nn - 13;
**************************************************
18 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1537
Faulty:
if (work[np - 8] > b2 || work[np - 4] > b1) {
  return;
}
Seed:
this.main=main.clone();
**************************************************
19 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1100
Faulty:
tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
Seed:
int index=0;
**************************************************
20 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1513
Faulty:
if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
  break;
}
Seed:
return;
**************************************************
21 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
22 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
squaredSecondary=new double[secondary.length];
**************************************************
23 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1484
Faulty:
b2=work[nn - 5] / work[nn - 7];
Seed:
tType=-3;
**************************************************
24 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1622
Faulty:
if (dMin1 == dN1) {
  tau=0.5 * dMin1;
}
Seed:
int lastPos=0;
**************************************************
25 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1586
Faulty:
if (dMin1 == dN1 && dMin2 == dN2) {
  tType=-7;
  double s=0.333 * dMin1;
  if (work[nn - 5] > work[nn - 7]) {
    return;
  }
  double b1=work[nn - 5] / work[nn - 7];
  double b2=b1;
  if (b2 != 0.0) {
    for (int i4=4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4-=4) {
      final double oldB1=b1;
      if (work[i4] > work[i4 - 2]) {
        return;
      }
      b1=b1 * (work[i4] / work[i4 - 2]);
      b2=b2 + b1;
      if (100 * Math.max(b1,oldB1) < b2) {
        break;
      }
    }
  }
  b2=Math.sqrt(cnst3 * b2);
  final double a2=dMin1 / (1 + b2 * b2);
  final double gap2=0.5 * dMin2 - a2;
  if (gap2 > 0.0 && gap2 > b2 * a2) {
    tau=Math.max(s,a2 * (1 - cnst2 * a2 * (b2 / gap2)* b2));
  }
 else {
    tau=Math.max(s,a2 * (1 - cnst2 * b2));
    tType=-8;
  }
}
 else {
  tau=0.25 * dMin1;
  if (dMin1 == dN1) {
    tau=0.5 * dMin1;
  }
  tType=-9;
}
Seed:
final double norm=getNorm();
**************************************************
26 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1508
Faulty:
if (work[i4] > work[i4 - 2]) {
  return;
}
Seed:
this.secondary=secondary.clone();
**************************************************
27 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
tau=g * dMin;
**************************************************
28 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
29 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1530
Faulty:
double s=0.25 * dMin;
Seed:
squaredSecondary=new double[secondary.length];
**************************************************
30 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1511
Faulty:
b2=b2 * (work[i4] / work[i4 - 2]);
Seed:
tType=-6;
**************************************************
31 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
np=nn - 13;
**************************************************
32 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
33 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1485
Faulty:
np=nn - 9;
Seed:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
**************************************************
34 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1622
Faulty:
if (dMin1 == dN1) {
  tau=0.5 * dMin1;
}
Seed:
int lastPos=0;
**************************************************
35 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
cachedD=null;
**************************************************
36 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1100
Faulty:
tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
Seed:
int index=0;
**************************************************
37 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1513
Faulty:
if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
  break;
}
Seed:
return;
**************************************************
38 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
double upper=Double.NEGATIVE_INFINITY;
**************************************************
39 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1084
Faulty:
if ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma)) {
  work[4 * deflatedEnd - 3 - pingPong]=0.0;
  dMin=0.0;
  updateSigma(tau);
  return deflatedEnd;
}
 else if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
if (tType < -22) {
  tau=0.0;
}
 else if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
**************************************************
40 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1511
Faulty:
b2=b2 * (work[i4] / work[i4 - 2]);
Seed:
for (int i=0; i < realEigenvalues.length; ++i) {
  if ((realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0)) {
    return false;
  }
}
**************************************************
41 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
if (work[nn - 5] > work[nn - 7]) {
  return;
}
**************************************************
42 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
int outBlockIndex=0;
**************************************************
43 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1508
Faulty:
if (work[i4] > work[i4 - 2]) {
  return;
}
Seed:
int k=0;
**************************************************
44 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1520
Faulty:
if (a2 < cnst1) {
  s=gam * (1 - Math.sqrt(a2)) / (1 + a2);
}
Seed:
int index=0;
**************************************************
45 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1622
Faulty:
if (dMin1 == dN1) {
  tau=0.5 * dMin1;
}
Seed:
int result=1;
**************************************************
46 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1543
Faulty:
if (end - start > 2) {
  b2=work[nn - 13] / work[nn - 15];
  a2=a2 + b2;
  for (int i4=nn - 17; i4 >= 4 * start + 2 + pingPong; i4-=4) {
    if (b2 == 0.0) {
      break;
    }
    b1=b2;
    if (work[i4] > work[i4 - 2]) {
      return;
    }
    b2=b2 * (work[i4] / work[i4 - 2]);
    a2=a2 + b2;
    if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
      break;
    }
  }
  a2=cnst3 * a2;
}
Seed:
b2=work[nn - 5] / work[nn - 7];
**************************************************
47 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
int k=0;
**************************************************
48 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1627
Faulty:
break;
Seed:
return new RealMatrixImpl(copyOut(),false);
**************************************************
49 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1627
Faulty:
break;
Seed:
final double t=sigma + sigmaLow;
**************************************************
50 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1098
Faulty:
if (dMin1 > 0.0) {
  tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
  tType-=11;
}
 else {
  tau*=0.25;
  tType-=12;
}
Seed:
int outBlockIndex=0;
**************************************************
51 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1586
Faulty:
if (dMin1 == dN1 && dMin2 == dN2) {
  tType=-7;
  double s=0.333 * dMin1;
  if (work[nn - 5] > work[nn - 7]) {
    return;
  }
  double b1=work[nn - 5] / work[nn - 7];
  double b2=b1;
  if (b2 != 0.0) {
    for (int i4=4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4-=4) {
      final double oldB1=b1;
      if (work[i4] > work[i4 - 2]) {
        return;
      }
      b1=b1 * (work[i4] / work[i4 - 2]);
      b2=b2 + b1;
      if (100 * Math.max(b1,oldB1) < b2) {
        break;
      }
    }
  }
  b2=Math.sqrt(cnst3 * b2);
  final double a2=dMin1 / (1 + b2 * b2);
  final double gap2=0.5 * dMin2 - a2;
  if (gap2 > 0.0 && gap2 > b2 * a2) {
    tau=Math.max(s,a2 * (1 - cnst2 * a2 * (b2 / gap2)* b2));
  }
 else {
    tau=Math.max(s,a2 * (1 - cnst2 * b2));
    tType=-8;
  }
}
 else {
  tau=0.25 * dMin1;
  if (dMin1 == dN1) {
    tau=0.5 * dMin1;
  }
  tType=-9;
}
Seed:
final int m=realEigenvalues.length;
**************************************************
52 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1507
Faulty:
b1=b2;
Seed:
this.main=main.clone();
**************************************************
53 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1508
Faulty:
if (work[i4] > work[i4 - 2]) {
  return;
}
Seed:
np=nn - 2 * pingPong;
**************************************************
54 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1093
Faulty:
if (dMin < 0.0) {
  if (tType < -22) {
    tau=0.0;
  }
 else   if (dMin1 > 0.0) {
    tau=(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
    tType-=11;
  }
 else {
    tau*=0.25;
    tType-=12;
  }
}
 else if (Double.isNaN(dMin)) {
  tau=0.0;
}
 else {
  loop=false;
}
Seed:
cachedD=MatrixUtils.createRealDiagonalMatrix(realEigenvalues);
**************************************************
55 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1544
Faulty:
b2=work[nn - 13] / work[nn - 15];
Seed:
a2=a2 + b2;
**************************************************
56 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
final double absoluteTolerance=4 * minPivot;
**************************************************
57 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1507
Faulty:
b1=b2;
Seed:
return new SparseFieldMatrix<T>(this);
**************************************************
58 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1621
Faulty:
tau=0.25 * dMin1;
Seed:
final int nCols=getColumnDimension();
**************************************************
59 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1509
Faulty:
return;
Seed:
final int lowerStart=4 * main.length;
**************************************************
Evaluations: 1987
EstimatedTime: 612268
