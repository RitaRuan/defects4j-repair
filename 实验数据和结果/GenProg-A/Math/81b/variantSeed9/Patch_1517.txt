1 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1533
Faulty:
final int np=nn - 2 * pingPong;
Seed:
if (work[nn - 9] > work[nn - 11]) {
  return;
}
**************************************************
2 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1481
Faulty:
if (work[nn - 5] > work[nn - 7]) {
  return;
}
Seed:
this.splitTolerance=splitTolerance;
**************************************************
3 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1481
Faulty:
if (work[nn - 5] > work[nn - 7]) {
  return;
}
Seed:
return copy().mapCeilToSelf();
**************************************************
4 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1543
Faulty:
if (end - start > 2) {
  b2=work[nn - 13] / work[nn - 15];
  a2=a2 + b2;
  for (int i4=nn - 17; i4 >= 4 * start + 2 + pingPong; i4-=4) {
    if (b2 == 0.0) {
      break;
    }
    b1=b2;
    if (work[i4] > work[i4 - 2]) {
      return;
    }
    b2=b2 * (work[i4] / work[i4 - 2]);
    a2=a2 + b2;
    if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
      break;
    }
  }
  a2=cnst3 * a2;
}
Seed:
lowerSpectra=Double.POSITIVE_INFINITY;
**************************************************
5 InsertBefore /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1101
Faulty:
tType-=11;
Seed:
double dot=0;
**************************************************
6 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1507
Faulty:
b1=b2;
Seed:
dN=0;
**************************************************
7 Replace /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1503
Faulty:
for (int i4=np; i4 >= 4 * start + 2 + pingPong; i4-=4) {
  if (b2 == 0.0) {
    break;
  }
  b1=b2;
  if (work[i4] > work[i4 - 2]) {
    return;
  }
  b2=b2 * (work[i4] / work[i4 - 2]);
  a2=a2 + b2;
  if (100 * Math.max(b2,b1) < a2 || cnst1 < a2) {
    break;
  }
}
Seed:
final double oldB1=b1;
**************************************************
8 Delete /home/rtx/repair/d4j/Math/81b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java 1484
Faulty:
b2=work[nn - 5] / work[nn - 7];
Seed:
double a2=(work[np - 8] / b2) * (1 + work[np - 4] / b1);
**************************************************
Evaluations: 1719
EstimatedTime: 588738
