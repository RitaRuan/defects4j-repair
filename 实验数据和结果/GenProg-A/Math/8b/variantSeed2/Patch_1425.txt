1 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
final double u=random.nextDouble();
**************************************************
2 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 163
Faulty:
return singletons.get(i);
Seed:
final double n=random.nextGaussian();
**************************************************
3 Replace /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
double[] vals=null;
**************************************************
4 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
double y=0;
**************************************************
5 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
int lower=getSupportLowerBound();
**************************************************
6 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
int lower=getSupportLowerBound();
**************************************************
7 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
final double df=getDegreesOfFreedom();
**************************************************
8 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
double x=0;
**************************************************
9 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
final double a=getAlpha();
**************************************************
10 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/util/MathArrays.java 1273
Faulty:
out[i]=values[i] * normalizedSum / sum;
Seed:
final double[] hiPrec=new double[2];
**************************************************
Evaluations: 1766
EstimatedTime: 364973
