1 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
return 0.0;
**************************************************
2 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/util/MathArrays.java 1269
Faulty:
for (int i=0; i < len; i++) {
  if (Double.isNaN(values[i])) {
    out[i]=Double.NaN;
  }
 else {
    out[i]=values[i] * normalizedSum / sum;
  }
}
Seed:
final int maxIndex=26;
**************************************************
3 Replace /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
continue;
**************************************************
4 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
return 2 * getDegreesOfFreedom();
**************************************************
5 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
double max=Double.NEGATIVE_INFINITY;
**************************************************
6 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
return Double.NaN;
**************************************************
7 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
return 0.0;
**************************************************
8 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
double s=Double.NaN;
**************************************************
9 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
int j=1;
**************************************************
10 Replace /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
double a=0;
**************************************************
11 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
double v=0;
**************************************************
12 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
double probability=0;
**************************************************
13 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 163
Faulty:
return singletons.get(i);
Seed:
final double x=random.nextGaussian();
**************************************************
14 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 161
Faulty:
sum+=probabilities[i];
Seed:
double y=0;
**************************************************
Evaluations: 1988
EstimatedTime: 397177
