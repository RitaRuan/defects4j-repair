1 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
return getMean();
**************************************************
2 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
return getMean();
**************************************************
3 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
if (sampleSize < 0) {
  throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
**************************************************
4 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
int i=1;
**************************************************
5 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
if (sampleSize < 0) {
  throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
**************************************************
6 Delete /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 189
Faulty:
for (int i=0; i < sampleSize; i++) {
  out[i]=sample();
}
Seed:
int i=1;
**************************************************
7 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 182
Faulty:
if (sampleSize <= 0) {
  throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
Seed:
if (sampleSize < 0) {
  throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,sampleSize);
}
**************************************************
8 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 162
Faulty:
if (randomValue < sum) {
  return singletons.get(i);
}
Seed:
double u2=random.nextDouble();
**************************************************
9 InsertBefore /home/rtx/repair/d4j/Math/8b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java 190
Faulty:
out[i]=sample();
Seed:
final double u2=random.nextDouble();
**************************************************
Evaluations: 1926
EstimatedTime: 398861
