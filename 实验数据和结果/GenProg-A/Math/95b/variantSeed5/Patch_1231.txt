1 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
2 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 106
Faulty:
return super.inverseCumulativeProbability(p);
Seed:
if (p == 1) {
  return Integer.MAX_VALUE;
}
**************************************************
3 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 106
Faulty:
return super.inverseCumulativeProbability(p);
Seed:
if (p < 0.0 || p > 1.0) {
  throw new IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");
}
**************************************************
4 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
5 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
6 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 132
Faulty:
return Double.MAX_VALUE;
Seed:
if (p == 0) {
  return 0d;
}
**************************************************
7 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
if (p == 0) {
  return 0;
}
 else if (p == 1) {
  return 1;
}
 else {
  return super.inverseCumulativeProbability(p);
}
**************************************************
8 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
9 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
10 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
11 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
12 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 132
Faulty:
return Double.MAX_VALUE;
Seed:
if (p == 0) {
  return 0d;
}
**************************************************
13 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
14 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 132
Faulty:
return Double.MAX_VALUE;
Seed:
double n=getNumeratorDegreesOfFreedom();
**************************************************
15 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
16 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 106
Faulty:
return super.inverseCumulativeProbability(p);
Seed:
if (p == 1) {
  return Integer.MAX_VALUE;
}
**************************************************
17 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
18 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
19 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 132
Faulty:
return Double.MAX_VALUE;
Seed:
if (p == 0) {
  return 0d;
}
**************************************************
20 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
if (p == 0) {
  return 0;
}
 else if (p == 1) {
  return 1;
}
 else {
  return super.inverseCumulativeProbability(p);
}
**************************************************
21 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 145
Faulty:
double d=getDenominatorDegreesOfFreedom();
Seed:
if (p == 1.0) {
  ret=Double.POSITIVE_INFINITY;
}
 else {
  ret=-getMean() * Math.log(1.0 - p);
}
**************************************************
Evaluations: 1567
EstimatedTime: 760834
