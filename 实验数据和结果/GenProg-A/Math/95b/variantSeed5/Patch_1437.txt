1 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
2 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java 179
Faulty:
throw new IllegalArgumentException("Invalid endpoint parameters:  lowerBound=" + lowerBound + " initial="+ initial+ " upperBound="+ upperBound);
Seed:
if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
  throw new IllegalArgumentException("Invalid endpoint parameters:  lowerBound=" + lowerBound + " initial="+ initial+ " upperBound="+ upperBound);
}
**************************************************
3 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
if (p == 0) {
  return 0;
}
 else if (p == 1) {
  return 1;
}
 else {
  return super.inverseCumulativeProbability(p);
}
**************************************************
4 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 145
Faulty:
double d=getDenominatorDegreesOfFreedom();
Seed:
if (p == 1.0) {
  ret=Double.POSITIVE_INFINITY;
}
 else {
  ret=-getMean() * Math.log(1.0 - p);
}
**************************************************
5 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java 61
Faulty:
if (p < 0.0 || p > 1.0) {
  throw new IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");
}
Seed:
if (p <= 0) {
  throw new IllegalArgumentException("The Poisson mean must be positive");
}
**************************************************
Evaluations: 1814
EstimatedTime: 868483
