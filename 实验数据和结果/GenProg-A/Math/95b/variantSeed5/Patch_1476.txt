1 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
2 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 106
Faulty:
return super.inverseCumulativeProbability(p);
Seed:
if (p < 0.0 || p > 1.0) {
  throw new IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");
}
**************************************************
3 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
4 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 148
Faulty:
return ret;
Seed:
return 1;
**************************************************
5 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java 61
Faulty:
if (p < 0.0 || p > 1.0) {
  throw new IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");
}
Seed:
if (p <= 0) {
  throw new IllegalArgumentException("The Poisson mean must be positive");
}
**************************************************
Evaluations: 1867
EstimatedTime: 890463
