1 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
ret=0.5;
**************************************************
2 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
return getLowerDomain(getPopulationSize(),getNumberOfSuccesses(),getSampleSize());
**************************************************
3 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
ret=0.5;
**************************************************
4 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 100
Faulty:
if (p == 0) {
  return 0d;
}
Seed:
return getNumberOfTrials();
**************************************************
5 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 158
Faulty:
if (degreesOfFreedom <= 0.0) {
  throw new IllegalArgumentException("degrees of freedom must be positive.");
}
Seed:
if (degreesOfFreedom <= 0.0) {
  throw new IllegalArgumentException("degrees of freedom must be positive.");
}
**************************************************
Evaluations: 1863
EstimatedTime: 854155
