1 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 78
Faulty:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
Seed:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
**************************************************
2 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
ret=0.0;
**************************************************
3 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 78
Faulty:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
Seed:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
**************************************************
4 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 78
Faulty:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
Seed:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
**************************************************
5 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
ret=0.0;
**************************************************
6 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java 178
Faulty:
if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
  throw new IllegalArgumentException("Invalid endpoint parameters:  lowerBound=" + lowerBound + " initial="+ initial+ " upperBound="+ upperBound);
}
Seed:
if (maximumIterations <= 0) {
  throw new IllegalArgumentException("bad value for maximumIterations: " + maximumIterations);
}
**************************************************
7 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 78
Faulty:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
Seed:
ret=Beta.regularizedBeta((n * x) / (m + n * x),0.5 * n,0.5 * m);
**************************************************
8 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 147
Faulty:
ret=d / (d - 2.0);
Seed:
ret=0.0;
**************************************************
9 InsertBefore /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java 128
Faulty:
return bracket(function,initial,lowerBound,upperBound,Integer.MAX_VALUE);
Seed:
int i=0;
**************************************************
10 Delete /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java 145
Faulty:
double d=getDenominatorDegreesOfFreedom();
Seed:
return -1;
**************************************************
11 Replace /home/ubuntu/rtx/d4j/Math/95b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java 67
Faulty:
UnivariateRealFunction rootFindingFunction=new UnivariateRealFunction(){
  public double value(  double x) throws FunctionEvaluationException {
    try {
      return cumulativeProbability(x) - p;
    }
 catch (    MathException ex) {
      throw new FunctionEvaluationException(x,ex.getPattern(),ex.getArguments(),ex);
    }
  }
}
;
Seed:
UnivariateRealFunction rootFindingFunction=new UnivariateRealFunction(){
  public double value(  double x) throws FunctionEvaluationException {
    try {
      return cumulativeProbability(x) - p;
    }
 catch (    MathException ex) {
      throw new FunctionEvaluationException(x,ex.getPattern(),ex.getArguments(),ex);
    }
  }
}
;
**************************************************
Evaluations: 1826
EstimatedTime: 861985
