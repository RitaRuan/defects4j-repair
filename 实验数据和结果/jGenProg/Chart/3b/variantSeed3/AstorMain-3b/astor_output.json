{"general":{"NR_RIGHT_COMPILATIONS":39,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":28,"NR_GENERATIONS":67,"TOTAL_TIME":41.391,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"134","VALIDATION":"|true|0|4390|[]|","patchhunks":[{"LOCATION":"org.jfree.data.time.TimeSeries","PATH":"\\\/home\\\/rtx\\\/d4j\\\/Chart\\\/3b\\\/source\\\/org\\\/jfree\\\/data\\\/time\\\/TimeSeries.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0.123","INGREDIENT_PARENT":"findBoundsByIteration()","PATCH_HUNK_TYPE":"CtInvocationImpl|CtBlockImpl","ORIGINAL_CODE":"fireSeriesChanged()","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/home\\\/rtx\\\/d4j\\\/Chart\\\/3b\\\/jgenprog\\\/variantSeed3\\\/AstorMain-3b\\\/\\\/src\\\/\\\/variant-134\\\/org\\\/jfree\\\/data\\\/time\\\/TimeSeries.java","LINE":"638","MP_RANKING":"59","PATCH_HUNK_CODE":"findBoundsByIteration()"}],"TIME":"41","GENERATION":"67","FOLDER_SOLUTION_CODE":"\\\/home\\\/rtx\\\/d4j\\\/Chart\\\/3b\\\/jgenprog\\\/variantSeed3\\\/AstorMain-3b\\\/\\\/src\\\/\\\/variant-134","PATCH_DIFF_ORIG":"--- \\\/source\\\/org\\\/jfree\\\/data\\\/time\\\/TimeSeries.java\\n+++ \\\/source\\\/org\\\/jfree\\\/data\\\/time\\\/TimeSeries.java\\n@@ -638,3 +637,0 @@\\n-\\t\\t\\t\\tfireSeriesChanged();\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -642 +638,0 @@\\n-\\t}\\n@@ -651 +646,0 @@\\n-\\tpublic void add(org.jfree.data.time.RegularTimePeriod period, double value) {\\n@@ -653,2 +647,0 @@\\n-\\t\\tadd(period, value, true);\\n-\\t}\\n@@ -664 +656,0 @@\\n-\\tpublic void add(org.jfree.data.time.RegularTimePeriod period, double value, boolean notify) {\\n@@ -666,3 +657,0 @@\\n-\\t\\torg.jfree.data.time.TimeSeriesDataItem item = new org.jfree.data.time.TimeSeriesDataItem(period, value);\\n-\\t\\tadd(item, notify);\\n-\\t}\\n@@ -678 +666,0 @@\\n-\\tpublic void add(org.jfree.data.time.RegularTimePeriod period, java.lang.Number value) {\\n@@ -680,2 +667,0 @@\\n-\\t\\tadd(period, value, true);\\n-\\t}\\n@@ -691 +676,0 @@\\n-\\tpublic void add(org.jfree.data.time.RegularTimePeriod period, java.lang.Number value, boolean notify) {\\n@@ -693,3 +677,0 @@\\n-\\t\\torg.jfree.data.time.TimeSeriesDataItem item = new org.jfree.data.time.TimeSeriesDataItem(period, value);\\n-\\t\\tadd(item, notify);\\n-\\t}\\n@@ -704,9 +685,0 @@\\n-\\tpublic void update(org.jfree.data.time.RegularTimePeriod period, java.lang.Number value) {\\n-\\t\\torg.jfree.data.time.TimeSeriesDataItem temp = new org.jfree.data.time.TimeSeriesDataItem(period, value);\\n-\\t\\tint index = java.util.Collections.binarySearch(this.data, temp);\\n-\\t\\tif (index < 0) {\\n-\\t\\t\\tthrow new org.jfree.data.general.SeriesException(\\\"There is no existing value for the \\\" + \\n-\\t\\t\\t\\\"specified 'period'.\\\");\\n-\\t\\t}\\n-\\t\\tupdate(index, value);\\n-\\t}\\n@@ -720,13 +693,40 @@\\n-\\tpublic void update(int index, java.lang.Number value) {\\n-\\t\\torg.jfree.data.time.TimeSeriesDataItem item = ((org.jfree.data.time.TimeSeriesDataItem) (this.data.get(index)));\\n-\\t\\tboolean iterate = false;\\n-\\t\\tjava.lang.Number oldYN = item.getValue();\\n-\\t\\tif (oldYN != null) {\\n-\\t\\t\\tdouble oldY = oldYN.doubleValue();\\n-\\t\\t\\tif (!java.lang.Double.isNaN(oldY)) {\\n-\\t\\t\\t\\titerate = (oldY <= this.minY) || (oldY >= this.maxY);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\titem.setValue(value);\\n-\\t\\tif (iterate) {\\n-\\t\\t\\tfindBoundsByIteration();\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\tfindBoundsByIteration();}}} \\tpublic void add(org.jfree.data.time.RegularTimePeriod period, double value) { \\t\\tadd(period, value, true);} \\tpublic void add(org.jfree.data.time.RegularTimePeriod period, double value, boolean notify) { \\t\\torg.jfree.data.time.TimeSeriesDataItem item = new org.jfree.data.time.TimeSeriesDataItem(period, value); \\t\\tadd(item, notify);} \\tpublic void add(org.jfree.data.time.RegularTimePeriod period, java.lang.Number value) { \\t\\tadd(period, value, true);} \\tpublic void add(org.jfree.data.time.RegularTimePeriod period, java.lang.Number value, boolean notify) { \\t\\torg.jfree.data.time.TimeSeriesDataItem item = new org.jfree.data.time.TimeSeriesDataItem(period, value); \\t\\tadd(item, notify);} \\tpublic void update(org.jfree.data.time.RegularTimePeriod period, java.lang.Number value) { \\t\\torg.jfree.data.time.TimeSeriesDataItem temp = new org.jfree.data.time.TimeSeriesDataItem(period, value); \\t\\tint index = java.util.Collections.binarySearch(this.data, temp); \\t\\tif (index < 0) { \\t\\t\\tthrow new org.jfree.data.general.SeriesException(\\\"There is no existing value for the \\\" + \\\"specified 'period'.\\\");} \\t\\tupdate(index, value);} \\tpublic void update(int index, java.lang.Number value) { \\t\\torg.jfree.data.time.TimeSeriesDataItem item = ((org.jfree.data.time.TimeSeriesDataItem) (this.data.get(index))); \\t\\tboolean iterate = false; \\t\\tjava.lang.Number oldYN = item.getValue(); \\t\\tif (oldYN != null) { \\t\\t\\tdouble oldY = oldYN.doubleValue(); \\t\\t\\tif (!java.lang.Double.isNaN(oldY)) { \\t\\t\\t\\titerate = (oldY <= this.minY) || (oldY >= this.maxY);}} \\t\\titem.setValue(value); \\t\\tif (iterate) { \\t\\t\\tfindBoundsByIteration();\\n\\n"}]}