{"general":{"NR_RIGHT_COMPILATIONS":118,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":38,"NR_GENERATIONS":156,"TOTAL_TIME":100.981,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"312","VALIDATION":"|true|0|454|[]|","patchhunks":[{"LOCATION":"org.jsoup.parser.HtmlTreeBuilderState","PATH":"\\\/home\\\/rtx\\\/repair\\\/d4j\\\/Jsoup\\\/45b\\\/src\\\/main\\\/java\\\/org\\\/jsoup\\\/parser\\\/HtmlTreeBuilderState.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0.707","INGREDIENT_PARENT":"if (\\n(t.isStartTag() && org.jsoup.helper.StringUtil.in(t.asStartTag().name(), \\n\\\"caption\\\", \\\"col\\\", \\\"colgroup\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) || \\n(t.isEndTag() && t.asEndTag().name().equals(\\\"table\\\"))) \\n{\\n\\ttb.error(this);\\n\\tboolean processed = tb.processEndTag(\\\"caption\\\");\\n\\tif (processed) \\n\\t{ \\t\\treturn tb.process(t);}\\n} else if (t.isEndTag() && org.jsoup.helper.StringUtil.in(t.asEndTag().name(), \\n\\\"body\\\", \\\"col\\\", \\\"colgroup\\\", \\\"html\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) {\\n\\ttb.error(this);\\n\\treturn false;\\n} else {\\n\\treturn tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody);\\n}","PATCH_HUNK_TYPE":"CtIfImpl|CtBlockImpl","ORIGINAL_CODE":"tb.error(this)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertBeforeOp","MODIFIED_FILE_PATH":"\\\/home\\\/rtx\\\/repair\\\/d4j\\\/Jsoup\\\/45b\\\/jgenprog\\\/variantSeed7\\\/AstorMain-45b\\\/\\\/src\\\/\\\/variant-312\\\/org\\\/jsoup\\\/parser\\\/HtmlTreeBuilderState.java","LINE":"830","MP_RANKING":"5","PATCH_HUNK_CODE":"if (\\n(t.isStartTag() && org.jsoup.helper.StringUtil.in(t.asStartTag().name(), \\n\\\"caption\\\", \\\"col\\\", \\\"colgroup\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) || \\n(t.isEndTag() && t.asEndTag().name().equals(\\\"table\\\"))) \\n{\\n\\ttb.error(this);\\n\\tboolean processed = tb.processEndTag(\\\"caption\\\");\\n\\tif (processed) \\n\\t{ \\t\\treturn tb.process(t);}\\n} else if (t.isEndTag() && org.jsoup.helper.StringUtil.in(t.asEndTag().name(), \\n\\\"body\\\", \\\"col\\\", \\\"colgroup\\\", \\\"html\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) {\\n\\ttb.error(this);\\n\\treturn false;\\n} else {\\n\\treturn tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody);\\n}"}],"TIME":"100","GENERATION":"156","FOLDER_SOLUTION_CODE":"\\\/home\\\/rtx\\\/repair\\\/d4j\\\/Jsoup\\\/45b\\\/jgenprog\\\/variantSeed7\\\/AstorMain-45b\\\/\\\/src\\\/\\\/variant-312","PATCH_DIFF_ORIG":"--- \\\/home\\\/rtx\\\/repair\\\/d4j\\\/Jsoup\\\/45b\\\/src\\\/main\\\/java\\\/org\\\/jsoup\\\/parser\\\/HtmlTreeBuilderState.java\\n+++ \\\/home\\\/rtx\\\/repair\\\/d4j\\\/Jsoup\\\/45b\\\/src\\\/main\\\/java\\\/org\\\/jsoup\\\/parser\\\/HtmlTreeBuilderState.java\\n@@ -830,26 +829,0 @@\\n-\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\tboolean processed = tb.processEndTag(\\\"table\\\");\\n-\\t\\t\\t\\t\\tif (processed) \\n-\\t\\t\\t\\t\\t{ \\t\\t\\t\\t\\t\\treturn tb.process(t);}\\n-\\t\\t\\t\\t} else if (org.jsoup.helper.StringUtil.in(name, \\\"style\\\", \\\"script\\\")) {\\n-\\t\\t\\t\\t\\treturn tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead);\\n-\\t\\t\\t\\t} else if (name.equals(\\\"input\\\")) {\\n-\\t\\t\\t\\t\\tif (!startTag.attributes.get(\\\"type\\\").equalsIgnoreCase(\\\"hidden\\\")) {\\n-\\t\\t\\t\\t\\t\\treturn anythingElse(t, tb);\\n-\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\ttb.insertEmpty(startTag);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t} else if (name.equals(\\\"form\\\")) {\\n-\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\tif (tb.getFormElement() != null)\\n-\\t\\t\\t\\t\\t\\treturn false;else \\n-\\t\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\t\\ttb.insertForm(startTag, false);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\treturn anythingElse(t, tb);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\treturn true;\\n-\\t\\t\\t} else if (t.isEndTag()) {\\n-\\t\\t\\t\\torg.jsoup.parser.Token.EndTag endTag = t.asEndTag();\\n-\\t\\t\\t\\tjava.lang.String name = endTag.name();\\n@@ -857,23 +830,0 @@\\n-\\t\\t\\t\\tif (name.equals(\\\"table\\\")) {\\n-\\t\\t\\t\\t\\tif (!tb.inTableScope(name)) {\\n-\\t\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\t\\treturn false;\\n-\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\ttb.popStackToClose(\\\"table\\\");\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\ttb.resetInsertionMode();\\n-\\t\\t\\t\\t} else if (org.jsoup.helper.StringUtil.in(name, \\n-\\t\\t\\t\\t\\\"body\\\", \\\"caption\\\", \\\"col\\\", \\\"colgroup\\\", \\\"html\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) {\\n-\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\treturn false;\\n-\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\treturn anythingElse(t, tb);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\treturn true;\\n-\\t\\t\\t} else if (t.isEOF()) {\\n-\\t\\t\\t\\tif (tb.currentElement().nodeName().equals(\\\"html\\\"))\\n-\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\treturn true;\\n-\\t\\t\\t}\\n-\\t\\t\\treturn anythingElse(t, tb);\\n-\\t\\t}\\n@@ -881,30 +831,0 @@\\n-\\t\\tboolean anythingElse(org.jsoup.parser.Token t, org.jsoup.parser.HtmlTreeBuilder tb) {\\n-\\t\\t\\ttb.error(this);\\n-\\t\\t\\tboolean processed;\\n-\\t\\t\\tif (org.jsoup.helper.StringUtil.in(tb.currentElement().nodeName(), \\\"table\\\", \\\"tbody\\\", \\\"tfoot\\\", \\\"thead\\\", \\\"tr\\\")) {\\n-\\t\\t\\t\\ttb.setFosterInserts(true);\\n-\\t\\t\\t\\tprocessed = tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody);\\n-\\t\\t\\t\\ttb.setFosterInserts(false);\\n-\\t\\t\\t} else {\\n-\\t\\t\\t\\tprocessed = tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody);\\n-\\t\\t\\t}\\n-\\t\\t\\treturn processed;\\n-\\t\\t}\\n-\\t},\\n-\\tInTableText() {\\n-\\t\\tboolean process(org.jsoup.parser.Token t, org.jsoup.parser.HtmlTreeBuilder tb) {\\n-\\t\\t\\tswitch (t.type) {\\n-\\t\\t\\t\\tcase Character :\\n-\\t\\t\\t\\t\\torg.jsoup.parser.Token.Character c = t.asCharacter();\\n-\\t\\t\\t\\t\\tif (c.getData().equals(org.jsoup.parser.HtmlTreeBuilderState.nullString)) {\\n-\\t\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\t\\treturn false;\\n-\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\ttb.getPendingTableCharacters().add(c.getData());\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\tdefault :\\n-\\n-\\t\\t\\t\\t\\tif (tb.getPendingTableCharacters().size() > 0) {\\n-\\t\\t\\t\\t\\t\\tfor (java.lang.String character : tb.getPendingTableCharacters()) {\\n-\\t\\t\\t\\t\\t\\t\\tif (!org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(character)) {\\n@@ -912,36 +833,115 @@\\n-\\t\\t\\t\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (org.jsoup.helper.StringUtil.in(tb.currentElement().nodeName(), \\\"table\\\", \\\"tbody\\\", \\\"tfoot\\\", \\\"thead\\\", \\\"tr\\\")) {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\ttb.setFosterInserts(true);\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\ttb.process(new org.jsoup.parser.Token.Character().data(character), org.jsoup.parser.HtmlTreeBuilderState.InBody);\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\ttb.setFosterInserts(false);\\n-\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\ttb.process(new org.jsoup.parser.Token.Character().data(character), org.jsoup.parser.HtmlTreeBuilderState.InBody);\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\t} else\\n-\\t\\t\\t\\t\\t\\t\\t\\ttb.insert(new org.jsoup.parser.Token.Character().data(character));\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\ttb.newPendingTableCharacters();\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\ttb.transition(tb.originalState());\\n-\\t\\t\\t\\t\\treturn tb.process(t);}\\n-\\n-\\t\\t\\treturn true;\\n-\\t\\t}\\n-\\t},\\n-\\tInCaption() {\\n-\\t\\tboolean process(org.jsoup.parser.Token t, org.jsoup.parser.HtmlTreeBuilder tb) {\\n-\\t\\t\\tif (t.isEndTag() && t.asEndTag().name().equals(\\\"caption\\\")) {\\n-\\t\\t\\t\\torg.jsoup.parser.Token.EndTag endTag = t.asEndTag();\\n-\\t\\t\\t\\tjava.lang.String name = endTag.name();\\n-\\t\\t\\t\\tif (!tb.inTableScope(name)) {\\n-\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\treturn false;\\n-\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\ttb.generateImpliedEndTags();\\n-\\t\\t\\t\\t\\tif (!tb.currentElement().nodeName().equals(\\\"caption\\\"))\\n-\\t\\t\\t\\t\\t\\ttb.error(this);\\n-\\t\\t\\t\\t\\ttb.popStackToClose(\\\"caption\\\");\\n-\\t\\t\\t\\t\\ttb.clearFormattingElementsToLastMarker();\\n-\\t\\t\\t\\t\\ttb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t} else if (\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\tif (\\n@@ -955 +955 @@\\n-\\t\\t\\t\\t\\treturn tb.process(t);\\n+\\t\\t\\t\\t\\t\\t{ \\t\\t\\t\\t\\t\\t\\treturn tb.process(t);}\\n@@ -962 +962 @@\\n-\\t\\t\\t}\\n+\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\tboolean processed = tb.processEndTag(\\\"table\\\"); \\t\\t\\t\\t\\tif (processed) { \\t\\t\\t\\t\\t\\treturn tb.process(t);}} else if (org.jsoup.helper.StringUtil.in(name, \\\"style\\\", \\\"script\\\")) { \\t\\t\\t\\t\\treturn tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead);} else if (name.equals(\\\"input\\\")) { \\t\\t\\t\\t\\tif (!startTag.attributes.get(\\\"type\\\").equalsIgnoreCase(\\\"hidden\\\")) { \\t\\t\\t\\t\\t\\treturn anythingElse(t, tb);} else { \\t\\t\\t\\t\\t\\ttb.insertEmpty(startTag);}} else if (name.equals(\\\"form\\\")) { \\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\tif (tb.getFormElement() != null) \\t\\t\\t\\t\\t\\treturn false;else { \\t\\t\\t\\t\\t\\ttb.insertForm(startTag, false);}} else { \\t\\t\\t\\t\\treturn anythingElse(t, tb);} \\t\\t\\t\\treturn true;} else if (t.isEndTag()) { \\t\\t\\t\\torg.jsoup.parser.Token.EndTag endTag = t.asEndTag(); \\t\\t\\t\\tjava.lang.String name = endTag.name(); \\t\\t\\t\\tif (name.equals(\\\"table\\\")) { \\t\\t\\t\\t\\tif (!tb.inTableScope(name)) { \\t\\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\t\\treturn false;} else { \\t\\t\\t\\t\\t\\ttb.popStackToClose(\\\"table\\\");} \\t\\t\\t\\t\\ttb.resetInsertionMode();} else if (org.jsoup.helper.StringUtil.in(name, \\\"body\\\", \\\"caption\\\", \\\"col\\\", \\\"colgroup\\\", \\\"html\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) { \\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\treturn false;} else { \\t\\t\\t\\t\\treturn anythingElse(t, tb);} \\t\\t\\t\\treturn true;} else if (t.isEOF()) { \\t\\t\\t\\tif (tb.currentElement().nodeName().equals(\\\"html\\\")) \\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\treturn true;} \\t\\t\\treturn anythingElse(t, tb);} \\t\\tboolean anythingElse(org.jsoup.parser.Token t, org.jsoup.parser.HtmlTreeBuilder tb) { \\t\\t\\ttb.error(this); \\t\\t\\tboolean processed; \\t\\t\\tif (org.jsoup.helper.StringUtil.in(tb.currentElement().nodeName(), \\\"table\\\", \\\"tbody\\\", \\\"tfoot\\\", \\\"thead\\\", \\\"tr\\\")) { \\t\\t\\t\\ttb.setFosterInserts(true); \\t\\t\\t\\tprocessed = tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody); \\t\\t\\t\\ttb.setFosterInserts(false);} else { \\t\\t\\t\\tprocessed = tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody);} \\t\\t\\treturn processed;}}, \\tInTableText() { \\t\\tboolean process(org.jsoup.parser.Token t, org.jsoup.parser.HtmlTreeBuilder tb) { \\t\\t\\tswitch (t.type) { \\t\\t\\t\\tcase Character : \\t\\t\\t\\t\\torg.jsoup.parser.Token.Character c = t.asCharacter(); \\t\\t\\t\\t\\tif (c.getData().equals(org.jsoup.parser.HtmlTreeBuilderState.nullString)) { \\t\\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\t\\treturn false;} else { \\t\\t\\t\\t\\t\\ttb.getPendingTableCharacters().add(c.getData());} \\t\\t\\t\\t\\tbreak; \\t\\t\\t\\tdefault : \\t\\t\\t\\t\\tif (tb.getPendingTableCharacters().size() > 0) { \\t\\t\\t\\t\\t\\tfor (java.lang.String character : tb.getPendingTableCharacters()) { \\t\\t\\t\\t\\t\\t\\tif (!org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(character)) { \\t\\t\\t\\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\t\\t\\t\\tif (org.jsoup.helper.StringUtil.in(tb.currentElement().nodeName(), \\\"table\\\", \\\"tbody\\\", \\\"tfoot\\\", \\\"thead\\\", \\\"tr\\\")) { \\t\\t\\t\\t\\t\\t\\t\\t\\ttb.setFosterInserts(true); \\t\\t\\t\\t\\t\\t\\t\\t\\ttb.process(new org.jsoup.parser.Token.Character().data(character), org.jsoup.parser.HtmlTreeBuilderState.InBody); \\t\\t\\t\\t\\t\\t\\t\\t\\ttb.setFosterInserts(false);} else { \\t\\t\\t\\t\\t\\t\\t\\t\\ttb.process(new org.jsoup.parser.Token.Character().data(character), org.jsoup.parser.HtmlTreeBuilderState.InBody);}} else \\t\\t\\t\\t\\t\\t\\t\\ttb.insert(new org.jsoup.parser.Token.Character().data(character));} \\t\\t\\t\\t\\t\\ttb.newPendingTableCharacters();} \\t\\t\\t\\t\\ttb.transition(tb.originalState()); \\t\\t\\t\\t\\treturn tb.process(t);} \\t\\t\\treturn true;}}, \\tInCaption() { \\t\\tboolean process(org.jsoup.parser.Token t, org.jsoup.parser.HtmlTreeBuilder tb) { \\t\\t\\tif (t.isEndTag() && t.asEndTag().name().equals(\\\"caption\\\")) { \\t\\t\\t\\torg.jsoup.parser.Token.EndTag endTag = t.asEndTag(); \\t\\t\\t\\tjava.lang.String name = endTag.name(); \\t\\t\\t\\tif (!tb.inTableScope(name)) { \\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\treturn false;} else { \\t\\t\\t\\t\\ttb.generateImpliedEndTags(); \\t\\t\\t\\t\\tif (!tb.currentElement().nodeName().equals(\\\"caption\\\")) \\t\\t\\t\\t\\t\\ttb.error(this); \\t\\t\\t\\t\\ttb.popStackToClose(\\\"caption\\\"); \\t\\t\\t\\t\\ttb.clearFormattingElementsToLastMarker(); \\t\\t\\t\\t\\ttb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);}} else if ((t.isStartTag() && org.jsoup.helper.StringUtil.in(t.asStartTag().name(), \\\"caption\\\", \\\"col\\\", \\\"colgroup\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) || (t.isEndTag() && t.asEndTag().name().equals(\\\"table\\\"))) { \\t\\t\\t\\ttb.error(this); \\t\\t\\t\\tboolean processed = tb.processEndTag(\\\"caption\\\"); \\t\\t\\t\\tif (processed) \\t\\t\\t\\t\\treturn tb.process(t);} else if (t.isEndTag() && org.jsoup.helper.StringUtil.in(t.asEndTag().name(), \\\"body\\\", \\\"col\\\", \\\"colgroup\\\", \\\"html\\\", \\\"tbody\\\", \\\"td\\\", \\\"tfoot\\\", \\\"th\\\", \\\"thead\\\", \\\"tr\\\")) { \\t\\t\\t\\ttb.error(this); \\t\\t\\t\\treturn false;} else { \\t\\t\\t\\treturn tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody);}\\n\\n"}]}