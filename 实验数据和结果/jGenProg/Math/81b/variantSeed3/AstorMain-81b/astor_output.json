{"general":{"NR_RIGHT_COMPILATIONS":1,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":1,"NR_GENERATIONS":2,"TOTAL_TIME":26.844,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"4","VALIDATION":"|true|0|2103|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.linear.EigenDecompositionImpl","PATH":"\\\/home\\\/rtx\\\/repair\\\/d4j\\\/Math\\\/81b\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/linear\\\/EigenDecompositionImpl.java","INGREDIENT_SCOPE":"-","ORIGINAL_CODE":"if ((end - start) > 2) {\\n\\tb2 = work[nn - 13] \\\/ work[nn - 15];\\n\\ta2 = a2 + b2;\\n\\tfor (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\\n\\t\\tif (b2 == 0.0) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\tb1 = b2;\\n\\t\\tif (work[i4] > work[i4 - 2]) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tb2 = b2 * (work[i4] \\\/ work[i4 - 2]);\\n\\t\\ta2 = a2 + b2;\\n\\t\\tif (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\ta2 = cnst3 * a2;\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"RemoveOp","MODIFIED_FILE_PATH":"\\\/home\\\/rtx\\\/repair\\\/d4j\\\/Math\\\/81b\\\/jgenprog\\\/variantSeed3\\\/AstorMain-81b\\\/\\\/src\\\/\\\/variant-4\\\/org\\\/apache\\\/commons\\\/math\\\/linear\\\/EigenDecompositionImpl.java","LINE":"1543","SUSPICIOUNESS":"0.577","MP_RANKING":"9"}],"TIME":"26","GENERATION":"2","FOLDER_SOLUTION_CODE":"\\\/home\\\/rtx\\\/repair\\\/d4j\\\/Math\\\/81b\\\/jgenprog\\\/variantSeed3\\\/AstorMain-81b\\\/\\\/src\\\/\\\/variant-4","PATCH_DIFF_ORIG":"--- \\\/home\\\/rtx\\\/repair\\\/d4j\\\/Math\\\/81b\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/linear\\\/EigenDecompositionImpl.java\\n+++ \\\/home\\\/rtx\\\/repair\\\/d4j\\\/Math\\\/81b\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/linear\\\/EigenDecompositionImpl.java\\n@@ -1543,19 +1543,19 @@\\n-\\t\\t\\t\\t\\tif ((end - start) > 2) {\\n-\\t\\t\\t\\t\\t\\tb2 = work[nn - 13] \\\/ work[nn - 15];\\n-\\t\\t\\t\\t\\t\\ta2 = a2 + b2;\\n-\\t\\t\\t\\t\\t\\tfor (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\\n-\\t\\t\\t\\t\\t\\t\\tif (b2 == 0.0) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb1 = b2;\\n-\\t\\t\\t\\t\\t\\t\\tif (work[i4] > work[i4 - 2]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb2 = b2 * (work[i4] \\\/ work[i4 - 2]);\\n-\\t\\t\\t\\t\\t\\t\\ta2 = a2 + b2;\\n-\\t\\t\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\ta2 = cnst3 * a2;\\n-\\t\\t\\t\\t\\t}\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n\\n"}]}