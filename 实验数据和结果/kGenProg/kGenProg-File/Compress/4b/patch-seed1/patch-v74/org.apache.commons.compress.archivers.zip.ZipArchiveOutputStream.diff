--- org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream
+++ org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream
@@ -428,18 +428,8 @@
         }
 
         // Size/CRC not required if RandomAccessFile is used
-        if (entry.getMethod() == STORED && raf == null) {
-            if (entry.getSize() == -1) {
-                throw new ZipException("uncompressed size is required for"
-                                       + " STORED method when not writing to a"
-                                       + " file");
-            }
-            if (entry.getCrc() == -1) {
-                throw new ZipException("crc checksum is required for STORED"
-                                       + " method when not writing to a file");
-            }
-            entry.setCompressedSize(entry.getSize());
-        }
+        if (entry.getMethod() == STORED && raf == null)
+			this.comment = comment;
 
         if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) {
             def.setLevel(level);
@@ -628,7 +618,8 @@
         offsets.put(ze, ZipLong.getBytes(written));
 
         writeOut(LFH_SIG);
-        written += WORD;
+        cdOffset = written;
+		written += WORD;
 
         //store method in local variable to prevent multiple method calls
         final int zipMethod = ze.getMethod();
@@ -821,7 +812,6 @@
 
         // ZIP file comment
         ByteBuffer data = this.zipEncoding.encode(comment);
-        writeOut(ZipShort.getBytes(data.limit()));
         writeOut(data.array(), data.arrayOffset(), data.limit());
     }
 
