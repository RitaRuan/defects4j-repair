RUNNING THE BUG: JacksonCore 10, WITH THE SEED: 3
2021-04-01 04:47:46 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = kgenprog.toml
rootDir = . (set by command line)
productPaths = [src/main/java] (set by command line)
testPaths = [src/test/java] (set by command line)
classPaths = [/home/rtx/repair/defects4j/framework/projects/lib/junit-4.11.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/junit/junit/4.11/junit-4.11.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/junit/junit/4.12/junit-4.12.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/lib/junit/junit/4.11/junit-4.11.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/lib/junit/junit/4.12/junit-4.12.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/lib/junit/junit/4.8.2/junit-4.8.2.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/lib/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/rtx/repair/defects4j/framework/projects/JacksonCore/lib/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar] (set by command line)
executionTests = [com.fasterxml.jackson.core.sym.TestByteBasedSymbols] (set by command line)
outDir = /home/rtx/repair/d4j/JacksonCore/10b/kGenProg-Jaccard/patch3 (set by command line)
logLevel = INFO
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 10
maxGeneration = 10
timeLimit = PT1M
testTimeLimit = PT10S
requiredSolutionsCount = 1
randomSeed = 3 (set by command line)
scope = PACKAGE
faultLocalization = Jaccard (set by command line)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true
isHistoryRecord = false
currentDirectory = /home/rtx/repair/d4j/JacksonCore/10b
version = 1.8.0
================================================================
2021-04-01 04:47:52 [main] [INFO]  KGenProgMain - initial failed tests (1/3)
com.fasterxml.jackson.core.sym.TestByteBasedSymbols.testIssue207: null
2021-04-01 04:47:53 [main] [INFO]  KGenProgMain - GA started
2021-04-01 04:47:53 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2021-04-01 04:48:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 10, build-succeeded 3, build-failed 7, syntax-invalid 0, redundant 0
Fitness: max 0.667(1), min 0.333(2), ave 0.444
----------------------------------------------------------------

2021-04-01 04:48:05 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2021-04-01 04:48:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 10, build-succeeded 1, build-failed 7, syntax-invalid 1, redundant 1
Fitness: max 0.667(1), min 0.667(1), ave 0.667
----------------------------------------------------------------

2021-04-01 04:48:06 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2021-04-01 04:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 8, build-succeeded 2, build-failed 4, syntax-invalid 2, redundant 0
Fitness: max 1(1), min 0.333(1), ave 0.667
----------------------------------------------------------------

2021-04-01 04:48:18 [main] [INFO]  KGenProgMain - GA stopped
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
+++ com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
@@ -948,6 +948,7 @@
             _hashArea = Arrays.copyOf(_hashArea, newSize);
         }
         System.arraycopy(quads, 0, _hashArea, start, qlen);
+		int maxColl = 0;
         _longNameOffset += qlen;
         return start;
     }
@@ -1106,7 +1107,6 @@
             String name = oldNames[offset>>2];
             switch (len) {
             case 1:
-                q[0] = oldHashArea[offset];
                 addName(name, q, 1);
                 break;
             case 2:
@@ -1126,7 +1126,6 @@
                 }
                 // #0 is hash, #1 offset
                 int qoff = oldHashArea[offset+1];
-                System.arraycopy(oldHashArea, qoff, q, 0, len);
                 addName(name, q, len);
                 break;
             }
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.io.CharTypes
+++ com.fasterxml.jackson.core.io.CharTypes
@@ -256,4 +256,3 @@
         return (byte[]) HB.clone();
     }
 }
-
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.Base64Variant
+++ com.fasterxml.jackson.core.Base64Variant
@@ -590,4 +590,3 @@
         throw new IllegalArgumentException("Unexpected end-of-String in base64 content");
     }
 }
-
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.util.ByteArrayBuilder
+++ com.fasterxml.jackson.core.util.ByteArrayBuilder
@@ -241,4 +241,3 @@
     }
 
 }
-
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.PrettyPrinter
+++ com.fasterxml.jackson.core.PrettyPrinter
@@ -174,4 +174,3 @@
     void beforeObjectEntries(JsonGenerator gen)
         throws IOException, JsonGenerationException;
 }
-
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.type.TypeReference
+++ com.fasterxml.jackson.core.type.TypeReference
@@ -55,4 +55,3 @@
     public int compareTo(TypeReference<T> o) { return 0; }
     // just need an implementation, not a good one... hence ^^^
 }
-
2021-04-01 04:48:18 [main] [INFO]  PatchLogExporter - patch (v28)
--- com.fasterxml.jackson.core.util.InternCache
+++ com.fasterxml.jackson.core.util.InternCache
@@ -61,4 +61,3 @@
         return result;
     }
 }
-
2021-04-01 04:48:18 [main] [INFO]  KGenProgMain - Summary
Reached generation = 3
Generated variants = 28
Syntax valid variants = 25
Build succeeded variants = 6
Time elapsed = 24 seconds
Exit status = SUCCESS
