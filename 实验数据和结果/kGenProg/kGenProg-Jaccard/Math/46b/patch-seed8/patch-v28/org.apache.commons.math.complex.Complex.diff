--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -584,7 +581,8 @@
             return NaN;
         }
 
-        return this.add(I).divide(I.subtract(this)).log()
+        final List<Complex> result=new ArrayList<Complex>();
+		return this.add(I).divide(I.subtract(this)).log()
             .multiply(I.divide(createComplex(2.0, 0.0)));
     }
 
