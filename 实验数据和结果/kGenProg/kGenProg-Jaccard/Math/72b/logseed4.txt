RUNNING THE BUG: Math 72, WITH THE SEED: 4
2021-03-22 23:32:52 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = kgenprog.toml
rootDir = . (set by command line)
productPaths = [src/main/java] (set by command line)
testPaths = [src/test/java] (set by command line)
classPaths = [/home/ubuntu/rtx/defects4j/framework/projects/lib/junit-4.11.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/easymock.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/commons-io.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/cglib.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/asm.jar, /home/ubuntu/rtx/defects4j/framework/projects/lib/junit-4.11.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/cglib.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/asm.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/easymock.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/commons-io.jar] (set by command line)
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set by command line)
outDir = /home/ubuntu/rtx/d4j/Math/72b/kGenProg-Jaccard/patch-seed4 (set by command line)
logLevel = INFO
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 10
maxGeneration = 10
timeLimit = PT1M
testTimeLimit = PT10S
requiredSolutionsCount = 1
randomSeed = 4 (set by command line)
scope = PACKAGE
faultLocalization = Jaccard (set by command line)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true
isHistoryRecord = false
currentDirectory = /home/ubuntu/rtx/d4j/Math/72b
version = 1.8.0
================================================================
2021-03-22 23:33:09 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null
2021-03-22 23:33:10 [main] [INFO]  KGenProgMain - GA started
2021-03-22 23:33:10 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2021-03-22 23:33:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 3, build-failed 4, syntax-invalid 2, redundant 1
Fitness: max 0.833(1), min 0.167(1), ave 0.556
----------------------------------------------------------------

2021-03-22 23:33:12 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2021-03-22 23:33:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 10, build-succeeded 3, build-failed 6, syntax-invalid 1, redundant 0
Fitness: max 0.833(2), min 0.167(1), ave 0.611
----------------------------------------------------------------

2021-03-22 23:33:13 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2021-03-22 23:33:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 1, build-succeeded 1, build-failed 0, syntax-invalid 0, redundant 0
Fitness: max 1(1), min 1(1), ave 1
----------------------------------------------------------------

2021-03-22 23:33:14 [main] [INFO]  KGenProgMain - GA stopped
2021-03-22 23:33:14 [main] [INFO]  PatchLogExporter - patch (v21)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2021-03-22 23:33:14 [main] [INFO]  PatchLogExporter - patch (v21)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2021-03-22 23:33:14 [main] [INFO]  PatchLogExporter - patch (v21)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2021-03-22 23:33:14 [main] [INFO]  PatchLogExporter - patch (v21)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2021-03-22 23:33:14 [main] [INFO]  KGenProgMain - Summary
Reached generation = 3
Generated variants = 21
Syntax valid variants = 18
Build succeeded variants = 7
Time elapsed = 4 seconds
Exit status = SUCCESS
