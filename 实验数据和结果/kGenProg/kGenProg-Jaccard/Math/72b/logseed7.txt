RUNNING THE BUG: Math 72, WITH THE SEED: 7
2021-03-22 23:34:34 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = kgenprog.toml
rootDir = . (set by command line)
productPaths = [src/main/java] (set by command line)
testPaths = [src/test/java] (set by command line)
classPaths = [/home/ubuntu/rtx/defects4j/framework/projects/lib/junit-4.11.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/easymock.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/commons-io.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/cglib.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/asm.jar, /home/ubuntu/rtx/defects4j/framework/projects/lib/junit-4.11.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/cglib.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/asm.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/easymock.jar, /home/ubuntu/rtx/defects4j/framework/projects/Lang/lib/commons-io.jar] (set by command line)
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set by command line)
outDir = /home/ubuntu/rtx/d4j/Math/72b/kGenProg-Jaccard/patch-seed7 (set by command line)
logLevel = INFO
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 10
maxGeneration = 10
timeLimit = PT1M
testTimeLimit = PT10S
requiredSolutionsCount = 1
randomSeed = 7 (set by command line)
scope = PACKAGE
faultLocalization = Jaccard (set by command line)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true
isHistoryRecord = false
currentDirectory = /home/ubuntu/rtx/d4j/Math/72b
version = 1.8.0
================================================================
2021-03-22 23:34:51 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null
2021-03-22 23:34:51 [main] [INFO]  KGenProgMain - GA started
2021-03-22 23:34:51 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2021-03-22 23:34:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 3, build-failed 4, syntax-invalid 1, redundant 2
Fitness: max 0.833(2), min 0.667(1), ave 0.778
----------------------------------------------------------------

2021-03-22 23:34:53 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2021-03-22 23:34:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 10, build-succeeded 3, build-failed 4, syntax-invalid 1, redundant 2
Fitness: max 0.833(2), min 0.167(1), ave 0.611
----------------------------------------------------------------

2021-03-22 23:34:54 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2021-03-22 23:34:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 20, build-succeeded 4, build-failed 5, syntax-invalid 0, redundant 11
Fitness: max 0.833(2), min 0.667(2), ave 0.75
----------------------------------------------------------------

2021-03-22 23:34:57 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2021-03-22 23:35:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 20, build-succeeded 7, build-failed 6, syntax-invalid 1, redundant 6
Fitness: max 0.833(2), min 0.167(2), ave 0.571
----------------------------------------------------------------

2021-03-22 23:35:00 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2021-03-22 23:35:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 20, build-succeeded 5, build-failed 6, syntax-invalid 4, redundant 5
Fitness: max 0.833(3), min 0.167(1), ave 0.667
----------------------------------------------------------------

2021-03-22 23:35:02 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2021-03-22 23:35:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 20, build-succeeded 5, build-failed 8, syntax-invalid 3, redundant 4
Fitness: max 0.833(4), min 0.167(1), ave 0.7
----------------------------------------------------------------

2021-03-22 23:35:04 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2021-03-22 23:35:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 20, build-succeeded 9, build-failed 5, syntax-invalid 1, redundant 5
Fitness: max 0.833(7), min 0.167(2), ave 0.685
----------------------------------------------------------------

2021-03-22 23:35:07 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2021-03-22 23:35:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 10, build-succeeded 3, build-failed 5, syntax-invalid 1, redundant 1
Fitness: max 1(1), min 0.167(1), ave 0.667
----------------------------------------------------------------

2021-03-22 23:35:09 [main] [INFO]  KGenProgMain - GA stopped
2021-03-22 23:35:09 [main] [INFO]  PatchLogExporter - patch (v130)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2021-03-22 23:35:09 [main] [INFO]  PatchLogExporter - patch (v130)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,11 +238,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2021-03-22 23:35:09 [main] [INFO]  PatchLogExporter - patch (v130)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2021-03-22 23:35:09 [main] [INFO]  PatchLogExporter - patch (v130)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2021-03-22 23:35:09 [main] [INFO]  PatchLogExporter - patch (v130)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2021-03-22 23:35:09 [main] [INFO]  KGenProgMain - Summary
Reached generation = 8
Generated variants = 130
Syntax valid variants = 118
Build succeeded variants = 39
Time elapsed = 17 seconds
Exit status = SUCCESS
